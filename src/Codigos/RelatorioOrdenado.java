/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Codigos;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Ramon
 */
public class RelatorioOrdenado extends javax.swing.JInternalFrame {

    /**
     * Creates new form RelatorioOrdenado
     */
    public RelatorioOrdenado() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        opcao = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nome da Musica", "Artista", "Album", "Genero", "Nota"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel1.setText("Nome");

        jLabel2.setText("Album");

        jLabel3.setText("Genero");

        jLabel4.setText("Nota");

        jLabel5.setText("Artista");

        jButton1.setText("Ordenar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Ordenar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Ordenar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Ordenar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Ordenar");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel2)
                                .addGap(80, 80, 80))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                                .addComponent(jButton2)
                                .addGap(41, 41, 41)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jButton3))
                        .addGap(48, 48, 48)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jButton4))
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton5)
                            .addComponent(jLabel5))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jButton4)
                    .addComponent(jButton5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here
        try{
//            ConexaoEMetodos.conectar();
            Class.forName("com.mysql.jdbc.Driver");
            Connection c = DriverManager.getConnection("jdbc:mysql://localhost/bibliotecamusical", "root","");
            String pesq="select DISTINCT musica.nome,artista.nome,album.nome,genero.nome,musica.nota from artista,genero,album,musica where genero.id=artista.genero_id && artista.id=album.artista_id && album.id=musica.album_id order by musica.nome;";
            PreparedStatement cmd;
            cmd = c.prepareStatement(pesq);
            ResultSet rs;
            rs=cmd.executeQuery();
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            model.setNumRows(0);
            while(rs.next()){
                model.addRow(new Object[]{
                    rs.getString("musica.nome"),
                    rs.getString("artista.nome"),
                    rs.getString("album.nome"),
                    rs.getString("genero.nome"),
                    rs.getString("musica.nota")
                });
            }
            } catch (ClassNotFoundException ex) { 
                JOptionPane.showMessageDialog(null,"Problema na configuração do Driver do MySQL!");
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null,"Problema na conexão com o banco de dados! Ou Query Errada");
            }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        try{
//            ConexaoEMetodos.conectar();
            Class.forName("com.mysql.jdbc.Driver");
            Connection c = DriverManager.getConnection("jdbc:mysql://localhost/bibliotecamusical", "root","");
            String pesq="select DISTINCT musica.nome,artista.nome,album.nome,genero.nome,musica.nota from artista,genero,album,musica where genero.id=artista.genero_id && artista.id=album.artista_id && album.id=musica.album_id order by album.nome;";
            PreparedStatement cmd;
            cmd = c.prepareStatement(pesq);
            ResultSet rs;
            rs=cmd.executeQuery();
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            model.setNumRows(0);
            while(rs.next()){
                model.addRow(new Object[]{
                    rs.getString("musica.nome"),
                    rs.getString("artista.nome"),
                    rs.getString("album.nome"),
                    rs.getString("genero.nome"),
                    rs.getString("musica.nota")
                });
            }
            } catch (ClassNotFoundException ex) { 
                JOptionPane.showMessageDialog(null,"Problema na configuração do Driver do MySQL!");
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null,"Problema na conexão com o banco de dados! Ou Query Errada");
            }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
         try{
//            ConexaoEMetodos.conectar();
            Class.forName("com.mysql.jdbc.Driver");
            Connection c = DriverManager.getConnection("jdbc:mysql://localhost/bibliotecamusical", "root","");
            String pesq="select DISTINCT musica.nome,artista.nome,album.nome,genero.nome,musica.nota from artista,genero,album,musica where genero.id=artista.genero_id && artista.id=album.artista_id && album.id=musica.album_id order by genero.nome;";
            PreparedStatement cmd;
            cmd = c.prepareStatement(pesq);
            ResultSet rs;
            rs=cmd.executeQuery();
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            model.setNumRows(0);
            while(rs.next()){
                model.addRow(new Object[]{
                    rs.getString("musica.nome"),
                    rs.getString("artista.nome"),
                    rs.getString("album.nome"),
                    rs.getString("genero.nome"),
                    rs.getString("musica.nota")
                });
            }
            } catch (ClassNotFoundException ex) { 
                JOptionPane.showMessageDialog(null,"Problema na configuração do Driver do MySQL!");
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null,"Problema na conexão com o banco de dados! Ou Query Errada");
            }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        try{
//            ConexaoEMetodos.conectar();
            Class.forName("com.mysql.jdbc.Driver");
            Connection c = DriverManager.getConnection("jdbc:mysql://localhost/bibliotecamusical", "root","");
            String pesq="select DISTINCT musica.nome,artista.nome,album.nome,genero.nome,musica.nota from artista,genero,album,musica where genero.id=artista.genero_id && artista.id=album.artista_id && album.id=musica.album_id order by musica.nota desc;";
            PreparedStatement cmd;
            cmd = c.prepareStatement(pesq);
            ResultSet rs;
            rs=cmd.executeQuery();
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            while(rs.next()){
                model.addRow(new Object[]{
                    rs.getString("musica.nome"),
                    rs.getString("artista.nome"),
                    rs.getString("album.nome"),
                    rs.getString("genero.nome"),
                    rs.getString("musica.nota")
                });
            }
            } catch (ClassNotFoundException ex) { 
                JOptionPane.showMessageDialog(null,"Problema na configuração do Driver do MySQL!");
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null,"Problema na conexão com o banco de dados! Ou Query Errada");
            }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        try{
//            ConexaoEMetodos.conectar();
            Class.forName("com.mysql.jdbc.Driver");
            Connection c = DriverManager.getConnection("jdbc:mysql://localhost/bibliotecamusical", "root","");
            String pesq="select DISTINCT musica.nome,artista.nome,album.nome,genero.nome,musica.nota from artista,genero,album,musica where genero.id=artista.genero_id && artista.id=album.artista_id && album.id=musica.album_id order by artista.nome;";
            PreparedStatement cmd;
            cmd = c.prepareStatement(pesq);
            ResultSet rs;
            rs=cmd.executeQuery();
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            model.setNumRows(0);
            while(rs.next()){
                model.addRow(new Object[]{
                    rs.getString("musica.nome"),
                    rs.getString("artista.nome"),
                    rs.getString("album.nome"),
                    rs.getString("genero.nome"),
                    rs.getString("musica.nota")
                });
            }
            } catch (ClassNotFoundException ex) { 
                JOptionPane.showMessageDialog(null,"Problema na configuração do Driver do MySQL!");
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null,"Problema na conexão com o banco de dados! Ou Query Errada");
            }
    }//GEN-LAST:event_jButton5ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.ButtonGroup opcao;
    // End of variables declaration//GEN-END:variables
}
